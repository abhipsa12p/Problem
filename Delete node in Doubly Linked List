class Solution {
  public:
  
  // delete Head Node
  Node *deleteHead(Node *head)
    {
        if (head == NULL || head->next == NULL)
        {
            return NULL;
        }
        Node *prev = head;
        head = head->next;
        head->prev = nullptr;
        prev->next = nullptr;
    
        delete prev;
        return head;
    }
    
    // delete Tail Node
    Node *deleteTail(Node *head)
    {
        if (head == NULL || head->next == NULL)
        {
            return NULL;
        }
        Node *tail = head;
        while (tail->next != NULL)
        {
            tail = tail->next;
        }
        Node *newtail = tail->prev;
        tail->prev = nullptr;
        newtail->next = nullptr;
        delete tail;
    
        return head;
    }
    Node* deleteNode(Node* head, int x) {
        // Your code here
        
        if(head == NULL) {
            return head;
        }
        
        
        int count = 0;
        Node* temp = head;
        
        while(temp) {
            
            count++;
            
            if(count == x) {
                break;
            }
            temp = temp->next;
        }
        
        Node* prev = temp->prev;
        Node* front = temp->next;
        
        if (prev == NULL && front == NULL)
        {
            return NULL;
        }
        else if (prev == NULL)
        {
            return deleteHead(head);
        }
        else if (front == NULL)
        {
            return deleteTail(head);
        }
        prev->next = front;
        front->prev = prev;
        temp->next = nullptr;
        temp->prev = nullptr;
    
        delete temp;
        return head;
        
    }
};
